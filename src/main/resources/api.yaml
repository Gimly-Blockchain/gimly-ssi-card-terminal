openapi: 3.0.3
info:
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Gimly
    url: https://gimly.id
    email: caspar@gimly.io
  description: Gimly SSI Card Terminal SDK is a Self Sovereign Identity SDK that can be used on terminals and desktops equiped with an NFC reader
  title: Gimly SSI Card Terminal
  version: "0.1"
tags:
  - name: Card
    description: Card and Wallet
  - name: Key
    description: Keys and Signatures
  - name: Proof
    description: Proofs of inputs, credentials and presentations
  - name: Storage
    description: Storage (Credentials only for now)
servers:
  - url: http://localhost:8080/gimly-ssi-card-terminal/0.1
components:
  securitySchemes:
    oauth2schema:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://gw.api.cloud.sphereon.com/token
          scopes:
            global: accessEverything
  parameters:
    CardIdQueryParam:
      in: query
      name: cardId
      description: The Id of a card
      required: false
      schema:
        type: string
    KeyIdPathParam:
      in: path
      name: keyId
      description: The Key index, public key or DID/Verification method key id
      required: true
      schema:
        type: string
    CredentialIdPathParam:
      in: path
      name: credentialId
      description: The Credential Id
      required: true
      schema:
        type: string
  requestBodies:
    CreateKeyRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateKeyRequest"
    KeyResponseCallback:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/KeyResults"

  responses:
    NotFoundResponse:
      description: Key does not exists
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrorResponse:
      description: An error occured
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    WalletResponse:
      description: The Wallet response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/KeyResults"
  schemas:
    Proof:
      description: A Credential or Presentation proof
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
        created:
          type: string
        proofPurpose:
          type: string
        verificationMethod:
          type: string
        jws:
          type: string
    CredentialSubject:
      type: object
      description: The Credential Subject
      additionalProperties: true
      properties:
        id:
          type: string
    CredentialStatus:
      description: Credential Status
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    Credential:
      description: A Credential
      type: object
      additionalProperties: true
      properties:
        '@context':
          type: array
          items:
            type: string
        id:
          type: string
        type:
          type: array
          items:
            type: string
        credentialSubject:
          $ref: "#/components/schemas/CredentialSubject"
        issuer:
          type: string
        issuanceDate:
          type: string
        expirationDate:
          type: string
        credentialStatus:
          $ref: "#/components/schemas/CredentialStatus"

    VerifiableCredential:
      description: A Verifiable Credential
      allOf:
        - $ref: "#/components/schemas/Credential"
      properties:
        issuanceDate:
          type: string
        proof:
          $ref: "#/components/schemas/Proof"
    Presentation:
      description: A Presentation
      type: object
      additionalProperties: true
      properties:
        '@context':
          type: array
          items:
            type: string
        type:
          type: string
        verifiableCredential:
          type: array
          items:
            $ref: "#/components/schemas/VerifiableCredential"
    VerifiablePresentation:
      description: A Verifiable Presentation
      allOf:
        - $ref: "#/components/schemas/Presentation"
      additionalProperties: true
      properties:
        proof:
          $ref: "#/components/schemas/Proof"
    SignCredentialRequest:
      description: Sign a credential adding a proof to it
      type: object
      required:
        - credential
      properties:
        credential:
          $ref: "#/components/schemas/Credential"
        store:
          type: boolean
          default: true
    SignCredentialResponse:
      description: A Verifiable Credential
      type: object
      properties:
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
        storageId:
          description: If the credential was stored it returns the id you can use (typically the credential id)
          type: string
    SignPresentationRequest:
      description: Sign a presentation adding a proof to it
      type: object
      required:
        - presentation
      properties:
        presentation:
          $ref: "#/components/schemas/Presentation"
    SignPresentationResponse:
      description: A Verifiable Presentation
      type: object
      properties:
        verifiablePresentation:
          $ref: "#/components/schemas/VerifiablePresentation"
    SignRequest:
      description: Sign input data using the specified key
      type: object
      required:
        - inputs
      properties:
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/SignInput"
          minItems: 1
    SignInput:
      description: Input data to be signed
      type: object
      required:
        - data
      properties:
        data:
          type: string
          pattern: "[a-f][A-F][0-9]"
        encoding:
          $ref: "#/components/schemas/InputEncoding"
    SignOutput:
      description: Signed output data
      readOnly: true
      type: object
      required:
        - data
      properties:
        data:
          type: string
          pattern: "[a-f][A-F][0-9]"
        encoding:
          $ref: "#/components/schemas/OutputEncoding"
    SignOutputFromInput:
      description: Output data that was signed
      readOnly: true
      properties:
        input:
          $ref: "#/components/schemas/SignInput"
        output:
          $ref: "#/components/schemas/SignOutput"
    InputEncoding:
      description: Input encoding. Only hex supported for now
      type: string
      default: hex
      enum:
        - hex
    SignResponse:
      description: Signed data
      type: object
      properties:
        publicKeyMultibase:
          description: The public key in Multibase Format
          type: string
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/SignOutputFromInput"
    OutputEncoding:
      description: Output encoding. Only hex supported for now
      type: string
      enum:
        - hex
    CreateKeyRequest:
      description: This is the create Key Request, which create a keypair on the NFC card
      type: object
      properties:
        curve:
          $ref: "#/components/schemas/Curve"
        unrevokeable:
          description: Whether this key can be unrevoked and thus reissued after revocation
          type: boolean
          default: false


    StoredCredentialsResponse:
      description: All stored credentials
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/VerifiableCredential"

    KeyResults:
      description: These are the Key Result
      type: object
      required:
        - id
      properties:
        id:
          description: Key Id
          readOnly: true
          type: string
        keys:
          type: array
          items:
            $ref: "#/components/schemas/KeyInfo"
    KeyInfo:
      description: Singular Key Information
      type: object
      properties:
        publicKeyMultibase:
          description: The public key in Multibase Format
          type: string
        index:
          description: The index of the key on the card
          type: integer
        status:
          $ref: "#/components/schemas/KeyStatus"
    KeyStatus:
      description: The status of the key on the card
      type: string
      enum:
        - unAvailable
        - active
        - inActive
    CardInfoResult:
      description: This is the card information
      type: object
      readOnly: true
      required:
        - cardId
        - cardPublicKey
      properties:
        cardId:
          description: The card id Id
          type: string
        batchId:
          description: The manufacturing batch id
          type: string
        cardPublicKeyMultibase:
          description: The card public key
          type: string
        cardInfo:
          $ref: "#/components/schemas/CardInfo"
        linkedTerminal:
          $ref: "#/components/schemas/LinkedTerminal"
      example:
        cardId: CB80000000012201
        batchId: CB80
        cardPublicKeyMultibase: z0400D05BCAC34B58AA48BF998FB68667A3112262275200431EA235EC4616A15287B5D21F15E45740AB6B829F415950DBC7A68493DCF5FD270C8CAAB0E975E9A0D9
        linkedTerminal: currentTerminal

    LinkedTerminal:
      description: The linked terminal
      type: string
      enum:
        - notLinked
        - currentTerminal
        - anotherTerminal
    CardInfo:
      description: Card info
      type: object
      properties:
        curves:
          type: array
          items:
            $ref: "#/components/schemas/Curve"
        firmwareVersion:
          $ref: "#/components/schemas/FirmwareVersion"
    FirmwareVersion:
      type: object
      properties:
        major:
          type: integer
        minor:
          type: integer
        patch:
          type: integer
        type:
          type: string
      example:
        major: 4
        minor: 12
        patch: 3
        type: "r"
    SignMode:
      type: string
      enum:
        - hash
        - raw
    Curve:
      type: string
      enum:
        - secp256k1
        - secp256r1
        - ed25519
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        id:
          type: integer
paths:
  "/":
    get:
      summary: Scan the card
      security:
        - oauth2schema:
            - global
      tags:
        - Card
      description: Scan the Card
      operationId: scanCard
      responses:
        "200":
          description: Card information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardInfoResult"
  "/keys":
    parameters:
      - $ref: "#/components/parameters/CardIdQueryParam"
    get:
      summary: Get all keys
      security:
        - oauth2schema:
            - global
      tags:
        - Key
      description: Get existing keys
      operationId: getKeys
      responses:
        "200":
          description: The keys
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyResults"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create a new key
      security:
        - oauth2schema:
            - global
      tags:
        - Key
      description: Create a new key.
      operationId: createKey
      responses:
        "200":
          description: Key created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyResults"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      parameters:
        - $ref: '#/components/parameters/CardIdQueryParam'
      requestBody:
        $ref: "#/components/requestBodies/CreateKeyRequestBody"

  "/keys/{keyId}":
    parameters:
      - $ref: "#/components/parameters/CardIdQueryParam"
      - $ref: "#/components/parameters/KeyIdPathParam"
    get:
      summary: Get a key by card Index, public key or DID key
      security:
        - oauth2schema:
            - global
      tags:
        - Key
      description: Get a key by card index, publickey or DID key
      operationId: getKey
      responses:
        "200":
          description: The Key info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyInfo"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deactivate a key by card Index, public key or DID key
      security:
        - oauth2schema:
            - global
      tags:
        - Key
      description: Deactivate a key by card index, publickey or DID key
      operationId: deactiveKey
      responses:
        "200":
          description: The Key info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyInfo"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/keys/{keyId}/proofs/signatures":
    parameters:
      - $ref: "#/components/parameters/KeyIdPathParam"
      - $ref: "#/components/parameters/CardIdQueryParam"
    put:
      summary: Sign one or more inputs
      security:
        - oauth2schema:
            - global
      tags:
        - Proof
      description: Sign one or more inputs using the provided key
      operationId: SignUsingKey
      responses:
        "200":
          description: The signed info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignResponse"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignRequest"
        description: Signs one or more inputs, typically hashes in hex format
        required: true
  "/keys/{keyId}/proofs/credentials":
    parameters:
      - $ref: "#/components/parameters/KeyIdPathParam"
      - $ref: "#/components/parameters/CardIdQueryParam"
    put:
      summary: Signs a credential (adds a proof)
      security:
        - oauth2schema:
            - global
      tags:
        - Proof
      description: Sign a credential, adding a proof and making it a verifiable credential
      operationId: SignCredential
      responses:
        "200":
          description: The signed info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignCredentialResponse"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignCredentialRequest"
        description: Signs one or more inputs, typically hashes in hex format
        required: true
  "/keys/{keyId}/proofs/presentations":
    parameters:
      - $ref: "#/components/parameters/KeyIdPathParam"
      - $ref: "#/components/parameters/CardIdQueryParam"
    put:
      summary: Signs a presentation (adds a proof)
      security:
        - oauth2schema:
            - global
      tags:
        - Proof
      description: Sign a presentation, adding a proof and making it a verifiable presentation
      operationId: SignPresentation
      responses:
        "200":
          description: The Verifiable Presentation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignPresentationResponse"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignPresentationRequest"
        description: Signs a presentation
        required: true
  "/storage/credentials":
    parameters:
      - $ref: "#/components/parameters/CardIdQueryParam"
    get:
      summary: Gets all stored Verifiable Credentials
      security:
        - oauth2schema:
            - global
      tags:
        - Storage
      description: Gets all stored Verifiable Credentials from the NFC card
      operationId: getStoredCredentials
      responses:
        "200":
          description: The credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoredCredentialsResponse"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/storage/credentials/{credentialId}":
    parameters:
      - $ref: "#/components/parameters/CardIdQueryParam"
      - $ref: "#/components/parameters/CredentialIdPathParam"
    get:
      summary: Gets a stored Verifiable credential
      security:
        - oauth2schema:
            - global
      tags:
        - Storage
      description: Gets the Verifiable Credentials by id from the NFC card
      operationId: getStoredCredential
      responses:
        "200":
          description: The credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifiableCredential"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a stored Verifiable credential
      security:
        - oauth2schema:
            - global
      tags:
        - Storage
      description: Deletes the Verifiable Credentials from the NFC card
      operationId: deleteStoredCredential
      responses:
        "200":
          description: The credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifiableCredential"
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
